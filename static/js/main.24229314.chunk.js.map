{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","toConsumableArray","concat","test","console","log","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","showClick","e","target","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","Link","to","marginRight","Components","react","contacts_Contact","Header","_ref","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","classNames","is-invalid","AddContact","errors","defineProperty","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","res","match","params","put","result","About","NotFound","App","Context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Contacts","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24229314.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport axios from 'axios'\n\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(\n                    contact => contact.id !== action.payload\n                )\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n\n                contacts: [...state.contacts, action.payload ]\n            };  \n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                test:console.log(\"update\", state),\n                contacts: state.contacts.map(\n                    contact => \n                    contact.id === action.payload.id \n                    ? (contact = action.payload)\n                    : contact\n                ) \n            }    \n            \n            default:\n                return state\n    }\n}\n\nexport class Provider extends Component{\n\n    state = {\n        contacts:[],\n        dispatch: action => this.setState(state => reducer(state, action))\n        }\n\n       async componentDidMount() {\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\")\n        this.setState({contacts:response.data})\n        }\n\n        render(){\n            return(\n                <Context.Provider value={this.state} >\n                    {this.props.children}\n                </Context.Provider>\n            )\n        }\n}\n\nexport const Consumer = Context.Consumer","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nimport {Consumer} from '../../Context'\nimport axios from 'axios'\n\nclass Contact extends Component {\n\n    state = {\n        showContactInfo: false\n    }\n\n    showClick = (e) => {\n        console.log(e.target)\n        this.setState({\n            showContactInfo: !this.state.showContactInfo\n        })\n    }\n\n    onDeleteClick = async (id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({type:\"DELETE_CONTACT\", payload: id})\n    }\n\n    render() {\n        const {id, name, email, phone} = this.props.contact\n        const {showContactInfo} = this.state\n        return (\n\n            <Consumer>\n                {value => {\n                    const {dispatch} = value\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}\n                                <i\n                                    className=\"fas fa-sort-down\"\n                                    style={{cursor: \"pointer\"}}\n                                    onClick={this.showClick}/>\n                                <i\n                                    className=\"fas fa-times\"\n                                    style={{cursor: \"pointer\",float: \"right\",color: \"red\"}}\n                                    onClick={()=>this.onDeleteClick(id, dispatch)}/>\n\n                                    <Link to={`contact/edit/${id}`} >\n                                        <i\n                                            className=\"fas fa-pencil-alt\"\n                                            style={{cursor: \"pointer\",float: \"right\",color: \"black\", marginRight:\"1rem\"}}\n                                            // onClick={()=>this.onDeleteClick(id, dispatch)}\n                                        />\n\n                                    </Link>\n\n                            </h4>\n                            {showContactInfo\n                                ? (\n                                    <ul className=\"list-group\">\n                                        <li className=\"list-group-item\">{phone}</li>\n                                        <li className=\"list-group-item\">{email}</li>\n                                    </ul>\n\n                                )\n                                : null}\n                        </div>\n                    )\n                }\n            }\n            </Consumer>\n\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact","import React, {Component, Fragment} from 'react'\nimport Contact from './Contact'\n\nimport {Consumer} from '../../Context'\n\nclass Components extends Component{\n\n    render(){\n        return(\n            <Consumer>\n                { value => {\n                    const {contacts} = value\n                    return(\n                        <Fragment>\n                            <h1 className=\"display-4 mb-2\"> \n                            <span className=\"text-danger\"> Contact</span>\n                            List\n                            </h1>\n                         {contacts.map((contact) => (\n                            <Contact \n                                key={contact.id}\n                                contact={contact} \n                           /> \n                        ))}\n                        </Fragment>\n                    )\n                }\n                }\n                </Consumer>\n        )\n\n    }\n\n}\n\n\nexport default Components","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst Header = ({branding}) => {\n    return(\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">  {branding} </a>\n            <div> \n                <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\"> \n                                <i className=\"fas fa-home\" /> \n                                Home \n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\" /> \n                                Add \n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\"> \n                            <i className=\"fas fa-question\" /> \n                            About\n                          </Link>\n                        </li>\n                    </ul>\n            </div>\n        </div>\n        </nav>\n    )\n}\n\nHeader.defaultProps = {\n    branding: \"My App\"\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nconst TextInputGroup = ({\n    label, \n    name, \n    value, \n    placeholder, \n    type,\n    onChange,\n    error\n}) => {\n    return(\n        <div className=\"form-group\">\n            <label>  {label} </label>\n            <input \n            type={type} \n            name={name}\n            className={classNames(\"form-control form-control-lg\", {'is-invalid':error})}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            />  \n            {error && \n            <div className=\"invalid-feedback\" >  \n                    {error}\n                  </div> \n                }\n        </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error:PropTypes.string,\n}\n\nTextInputGroup.defaultProps = {\n    type:\"text\"\n}\n\n\nexport default TextInputGroup","import React ,{Component} from 'react'\nimport {Consumer} from '../../Context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass AddContact extends Component{\n\n    state= {\n        name:'',\n        email:'',\n        phone:'',\n        errors:{}\n        }\n\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }    \n\n    onSubmit = async (e,dispatch ) => {\n        e.preventDefault()\n        const {name, email, phone} = this.state\n\n        if (name === \"\"){\n            return this.setState({errors: {name: \"please enter a name\"} })\n            \n        }\n        if (email === \"\"){\n            return  this.setState({errors: {email: \"please enter an email\"} })\n      \n        }\n        if (phone === \"\"){\n            return  this.setState({errors: {phone: \"please enter a phone Number\"} })\n            \n        }\n\n       const newContact = {\n           name,\n           email,\n           phone\n       }\n\n       await axios.post(`https://jsonplaceholder.typicode.com/users/`, newContact)\n\n       dispatch({type:\"ADD_CONTACT\", payload:newContact})\n\n       //clear the fields\n       this.setState({\n           name:'',\n           email:'',\n           phone:'',\n           errors:{}\n       })\n\n       this.props.history.push('/')\n\n    }   \n\n    render(){\n        const {name,email,phone, errors} = this.state\n        return(\n            <Consumer>\n                {value => {\n                    const {dispatch} = value\n                return(\n                    <div className=\"card mb-3\">\n                <div className=\"card-header\">\n                    AddContact\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={(e)=>this.onSubmit(e,dispatch)}>\n                        <TextInputGroup\n                            name= \"name\"\n                            label= \"name\"\n                            type= \"text\"\n                            value= {name}\n                            placeholder= \"enter name\"\n                            onChange= {this.onChange}\n                            error={errors.name}\n                        />\n                        <TextInputGroup\n                            name= \"email\"\n                            label= \"Email\"\n                            type= \"email\"\n                            value= {email}\n                            placeholder= \"enter email\"\n                            onChange= {this.onChange}\n                            error={errors.email}\n                        />\n                        <TextInputGroup\n                            name= \"phone\"\n                            label= \"Phone Number\"\n                            type= \"text\"\n                            value= {phone}\n                            placeholder= \"enter Phone Number\"\n                            onChange= {this.onChange}\n                            error={errors.phone}\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Add Contact\"\n                            className=\"btn btn-light btn-block\"\n                        />\n                    </form>\n                 </div>\n            </div>\n                )\n                }\n            }  \n        </Consumer>\n        )\n    }\n}\n\n\nexport default AddContact","import React ,{Component} from 'react'\nimport {Consumer} from '../../Context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass EditContact extends Component{\n    state= {\n        name:'',\n        email:'',\n        phone:'',\n        errors:{}\n        }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }    \n\n    async componentDidMount(){\n        const {id} = this.props.match.params\n       const result = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n       const contact = result.data\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone,\n        })\n    }\n\n\n\n    onSubmit = async (e,dispatch ) => {\n        e.preventDefault()\n\n        const {id} = this.props.match.params\n        const {name, email, phone} = this.state\n\n        if (name === \"\"){\n            return this.setState({errors: {name: \"please enter a name\"} })\n            \n        }\n        if (email === \"\"){\n            return  this.setState({errors: {email: \"please enter an email\"} })\n      \n        }\n        if (phone === \"\"){\n            return  this.setState({errors: {phone: \"please enter a phone Number\"} })\n            \n        }\n\n        const updateContact = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact )\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data })\n      \n       //clear the fields\n       this.setState({\n           name:'',\n           email:'',\n           phone:'',\n           errors:{}\n       })\n       this.props.history.push('/')\n    }   \n\n    render(){\n        const {name,email,phone, errors} = this.state\n        return(\n            <Consumer>\n                {value => {\n                    const {dispatch} = value\n                return(\n                    <div className=\"card mb-3\">\n                <div className=\"card-header\">\n            Edit Contact\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={(e)=>this.onSubmit(e,dispatch)}>\n                        <TextInputGroup\n                            name= \"name\"\n                            label= \"name\"\n                            type= \"text\"\n                            value= {name}\n                            placeholder= \"enter name\"\n                            onChange= {this.onChange}\n                            error={errors.name}\n                        />\n                        <TextInputGroup\n                            name= \"email\"\n                            label= \"Email\"\n                            type= \"email\"\n                            value= {email}\n                            placeholder= \"enter email\"\n                            onChange= {this.onChange}\n                            error={errors.email}\n                        />\n                        <TextInputGroup\n                            name= \"phone\"\n                            label= \"Phone Number\"\n                            type= \"text\"\n                            value= {phone}\n                            placeholder= \"enter Phone Number\"\n                            onChange= {this.onChange}\n                            error={errors.phone}\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Edit Contact\"\n                            className=\"btn btn-light btn-block\"\n                        />\n                    </form>\n                 </div>\n            </div>\n                )\n                }\n            }  \n        </Consumer>\n        )\n    }\n}\n\n\nexport default EditContact","import React from 'react'\n\nconst About = (props) => {\n    console.log(\"match\", props)\n    return(\n        <div>\n            <h1 className=\"display-4\"> About Contact Manager</h1>\n            <p className=\"lead\"> Simple App to manage components </p>\n            <p className=\"text-secondary\"> Verson 1.0.0 </p>\n        </div>\n        )\n}\n\nexport default About\n\n\n\n","import React from 'react'\n\nconst NotFound = () => (\n    <div>\n        <h1 className=\"display-4\" > Page Not Found </h1>\n        <p className=\"lead\" > Sorry page does not exist</p>\n     </div>\n)\n\n\nexport default NotFound","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Contacts from './components/contacts/Contacts'\nimport Header from './components/layout/Header'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport {Provider} from './Context'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\n\n import 'bootstrap/dist/css/bootstrap.min.css' \n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n            <div className=\"App\">\n                <Header branding=\"Content Manager1\"/>  \n                <div className=\"container\">\n                  <Switch>\n                      <Route exact path=\"/\" component={Contacts}/>\n                      <Route exact path=\"/contact/add\" component={AddContact}/>\n                      <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                      <Route exact path=\"/about\" component={About}/>\n                      <Route component={NotFound}/>\n                  </Switch> \n                </div >   \n            </div>\n          </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}